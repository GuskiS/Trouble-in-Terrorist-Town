#include <amxmodx>
#include <ttt>

public plugin_init()
{
	register_plugin("[TTT] Exploit prevention", TTT_VERSION, TTT_AUTHOR);
	new const commands[][] =
	{
		"coverme", "takepoint", "holdpos", "regroup", "followme", "takingfire", "radio1", "radio2", "radio3", "radio4",
		"go", "fallback", "sticktog", "getinpos", "stormfront", "report", "vote",
		"roger", "enemyspot", "needbackup", "sectorclear", "inposition", "reportingin", "getout", "negative", "enemydown"
	};

	for(new i = 0; i < sizeof(commands); i++)
		register_clcmd(commands[i], "block_cmd");
}

public client_disconnect(id)
{
	if(task_exists(id))
		remove_task(id);
}

public client_putinserver(id)
{
	if(!is_user_bot(id) && !is_user_hltv(id))
		set_task(5.0, "query_him", id);
}

public query_him(id)
	if(is_user_connected(id))
		query_client_cvar(id, "cl_minmodels", "query_results");

public query_results(id, const cvar[], const val[])
{
	if(floatstr(val) == 1.0)
	{
		static name[32];
		get_user_name(id, name, charsmax(name));
		ttt_log_to_file(LOG_MISC, "%s was using cl_minmodels 1, kicking!", name);
		server_cmd( "kick #%i %s", get_user_userid(id), "Stop using cl_minmodels 1!");
	}

	client_cmd(id, "setinfo _ah 0");
	if(!task_exists(id))
		set_task(2.0, "query_him", id, _, _, "b");
}

public block_cmd()
{
	return PLUGIN_HANDLED;
}